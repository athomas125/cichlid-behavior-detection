import sys
import os

# Get the directory of the current file
current_dir = os.path.dirname(os.path.abspath(__file__))

# Add the repository root directory to sys.path
repo_root = os.path.abspath(os.path.join(current_dir, '../..'))
if repo_root not in sys.path:
    sys.path.insert(0, repo_root)
    
import deeplabcut as dlc
from behavior_detection.misc.analyse_videos import analyse_videos
from behavior_detection.misc.train_network import kill_and_reset

def main():
    config_path = '/data/home/athomas314/dlc_model-student-2023-07-26/config.yaml'

    # for testing zero shot
    # config_path = '/data/home/athomas314/dlc_model-student-zero-shot-yellowhead/config.yaml'

    # config_path = '/data/home/athomas314/YellowHeadCroppedVid1-Adam-2024-05-29/config.yaml'
    
    # dlc.create_multianimaltraining_dataset(config_path)
     
    train_pose_config, _, _ = dlc.return_train_network_path(config_path)
    augs = {
        "gaussian_noise": True,
        "elastic_transform": True,
        "rotation": 180,
        "motion_blur": True,
    }
    dlc.auxiliaryfunctions.edit_config(
        train_pose_config,
        augs,
    )

    # dlc.train_network(config_path, shuffle=1, gputouse=1, saveiters=10000, maxiters=100000)
    # dlc.evaluate_network(config_path, gputouse=2)
    
    # video_path = ['/data/home/athomas314/test_video/MC_singlenuc23_1_Tk33_0212200003_vid_clip_36170_38240.mp4']
    video_path = ['/data/home/athomas314/oneshot_videos/MC_singlenuc23_1_Tk33_0212200003_vid_debugging_clip.mp4',
                  '/data/home/athomas314/oneshot_videos/MC_singlenuc34_3_Tk43_0303200001_vid_clip_1240_1360.mp4']
    for video in video_path:
        print(f"analyzing {video}")
        # try:
        analyse_videos(config_path=config_path, videos=[video], shuffle=1, n_fish=10)
        # except Exception:
        #     kill_and_reset()
        #     continue

    # # Analyse videos must be run before doing transformer reidentification and the transformer re-id 
    # # uses the bodypart embeddings (generated by analyse_videos) + tracks as it's inputs.
    dlc.transformer_reID(config_path, video_path)
    
    # this only works right now for my personal modified version version of deeplabcut 
    # TODO - create a standalone version of create video method to do this.
    dlc.create_labeled_video(config_path, 
                             video_path, 
                             shuffle=1,
                             filtered=True,
                             color_by="individual",
                             overwrite=True,
                             use_transf_labels=True,
                             plot_with_center_trail=True,
                             center_trailpoints=90
                             )
    # dlc.plot_trajectories(config_path, video_path, shuffle=1)
    
if __name__ == "__main__":
    main()